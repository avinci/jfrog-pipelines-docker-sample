resources:
  - name: docker_repo
    type: GitRepo
    configuration:
      gitProvider: avinci_github                       # <-- replace with your integration
      path: avinci/jfrog-pipelines-docker-sample    # <-- replace with your repository name
      branches:
        include: master

  - name: docker_img
    type: Image
    configuration:
      registry: bsArt                              # <-- replace with your artifactory integration
      sourceRepository: docker-dev-local           # <-- required if registry is Artifactory
      imageName: platform.jfrog-pipelines.com/docker-dev-local/docker_app  # < -- replace with your image path and name
      imageTag: latest
      autoPull: true

  - name: docker_dev_build_info
    type: BuildInfo
    configuration:
      sourceArtifactory: bsArt
      buildName: dockerBuild
      buildNumber: 1    

#  - name: docker_promoted_build_info
#    type: BuildInfo
#    configuration:
#      sourceArtifactory: bsArt
#      buildName: dockerBuild
#      buildNumber: 1

pipelines:
  - name: docker_dev_pipeline
    steps:
      - name: docker_build
        type: DockerBuild
        configuration:
          affinityGroup: docker_group
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: platform.jfrog-pipelines.com/docker-dev-local/docker_app  # replace with your image path and name
          dockerImageTag: ${run_number}
          inputResources:
            - name: docker_repo
          integrations:
            - name: bsArt                            # <-- replace with your artifactory integration

      - name: docker_push
        type: DockerPush
        configuration:
          affinityGroup: docker_group
          targetRepository: docker-dev-local
          integrations:
            - name: bsArt                            # <-- replace with your artifactory integration
          inputSteps:
            - name: docker_build
          outputResources:
            - name: docker_img

      - name: docker_test
        type: Bash
        configuration:
          inputResources:
            - name: docker_img
        execution:
          onExecute:
            - echo "run some test automation platform here"

      - name: docker_publish_build
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: docker_test
          outputResources:
            - name: docker_dev_build_info

#      - name: promote_dbp_build
#        type: PromoteBuild
#        configuration:
#          targetRepository: demo-pipelines
#          integrations:
#            - name: art
#          inputResources:
#            - name: dbp_build_info
#          outputResources:
#            - name: dbp_promoted_build_info

